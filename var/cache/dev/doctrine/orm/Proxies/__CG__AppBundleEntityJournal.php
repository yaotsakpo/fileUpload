<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Journal extends \AppBundle\Entity\Journal implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'jour', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'numPiece', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'numFacture', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'reference', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'numCompteGeneral', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'numComptTiers', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'libelleEcriture', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'dateEcheance', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'positionJournal', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'montantDebit', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'montantCredit', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'importation', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'detailsCumul', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'cumul'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'jour', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'numPiece', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'numFacture', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'reference', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'numCompteGeneral', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'numComptTiers', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'libelleEcriture', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'dateEcheance', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'positionJournal', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'montantDebit', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'montantCredit', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'importation', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'detailsCumul', '' . "\0" . 'AppBundle\\Entity\\Journal' . "\0" . 'cumul'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Journal $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setJour($jour)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJour', [$jour]);

        return parent::setJour($jour);
    }

    /**
     * {@inheritDoc}
     */
    public function getJour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJour', []);

        return parent::getJour();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumPiece($numPiece)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumPiece', [$numPiece]);

        return parent::setNumPiece($numPiece);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumPiece()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumPiece', []);

        return parent::getNumPiece();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumFacture($numFacture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumFacture', [$numFacture]);

        return parent::setNumFacture($numFacture);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumFacture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumFacture', []);

        return parent::getNumFacture();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference($reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', [$reference]);

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', []);

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumCompteGeneral($numCompteGeneral)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumCompteGeneral', [$numCompteGeneral]);

        return parent::setNumCompteGeneral($numCompteGeneral);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumCompteGeneral()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumCompteGeneral', []);

        return parent::getNumCompteGeneral();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumComptTiers($numComptTiers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumComptTiers', [$numComptTiers]);

        return parent::setNumComptTiers($numComptTiers);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumComptTiers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumComptTiers', []);

        return parent::getNumComptTiers();
    }

    /**
     * {@inheritDoc}
     */
    public function setLibelleEcriture($libelleEcriture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLibelleEcriture', [$libelleEcriture]);

        return parent::setLibelleEcriture($libelleEcriture);
    }

    /**
     * {@inheritDoc}
     */
    public function getLibelleEcriture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLibelleEcriture', []);

        return parent::getLibelleEcriture();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEcheance($dateEcheance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEcheance', [$dateEcheance]);

        return parent::setDateEcheance($dateEcheance);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEcheance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEcheance', []);

        return parent::getDateEcheance();
    }

    /**
     * {@inheritDoc}
     */
    public function setPositionJournal($positionJournal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPositionJournal', [$positionJournal]);

        return parent::setPositionJournal($positionJournal);
    }

    /**
     * {@inheritDoc}
     */
    public function getPositionJournal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPositionJournal', []);

        return parent::getPositionJournal();
    }

    /**
     * {@inheritDoc}
     */
    public function setMontantDebit($montantDebit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMontantDebit', [$montantDebit]);

        return parent::setMontantDebit($montantDebit);
    }

    /**
     * {@inheritDoc}
     */
    public function getMontantDebit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMontantDebit', []);

        return parent::getMontantDebit();
    }

    /**
     * {@inheritDoc}
     */
    public function setMontantCredit($montantCredit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMontantCredit', [$montantCredit]);

        return parent::setMontantCredit($montantCredit);
    }

    /**
     * {@inheritDoc}
     */
    public function getMontantCredit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMontantCredit', []);

        return parent::getMontantCredit();
    }

    /**
     * {@inheritDoc}
     */
    public function setOperationCaisse(\AppBundle\Entity\OperationCaisse $operationCaisse = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOperationCaisse', [$operationCaisse]);

        return parent::setOperationCaisse($operationCaisse);
    }

    /**
     * {@inheritDoc}
     */
    public function getOperationCaisse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOperationCaisse', []);

        return parent::getOperationCaisse();
    }

    /**
     * {@inheritDoc}
     */
    public function setDetailsCumul(\AppBundle\Entity\Journal $detailsCumul = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDetailsCumul', [$detailsCumul]);

        return parent::setDetailsCumul($detailsCumul);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetailsCumul()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetailsCumul', []);

        return parent::getDetailsCumul();
    }

    /**
     * {@inheritDoc}
     */
    public function setCumul(\AppBundle\Entity\Journal $cumul = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCumul', [$cumul]);

        return parent::setCumul($cumul);
    }

    /**
     * {@inheritDoc}
     */
    public function getCumul()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCumul', []);

        return parent::getCumul();
    }

    /**
     * {@inheritDoc}
     */
    public function setImportation(\AppBundle\Entity\Importation $importation = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImportation', [$importation]);

        return parent::setImportation($importation);
    }

    /**
     * {@inheritDoc}
     */
    public function getImportation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImportation', []);

        return parent::getImportation();
    }

}
